<style>
table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {background-color: #f2f2f2;}
</style>

<br>
<br>

# Model checking

We need a very small amount of set-theory notation for this course. The reason why is that we eventually want to define models and truth in a model: and we will represent models by sets.

- [Model-checking](#model-checking)

## Model-checking

```{.CounterModeler .Simple system="gamutND"}
1.1 AxFx, ExGx
```

```{.CounterModeler .Simple system="gamutND"}
1.2 AxAyFxy, EyExGxy
```

```{.CounterModeler .Simple system="gamutND"}
1.3 AxAyRxy, EyExRxy
```

```{.CounterModeler .Validity system="gamutND"}
1.4 AxRxx :|-: AxAyRxy
```

```{.CounterModeler .Validity system="gamutND"}
1.5 AxRxxx :|-: AxAyAzRxyz
```

```{.CounterModeler .Validity system="gamutND"}
1.6 Rcc :|-: AxRxx
```

```{.CounterModeler .Validity system="gamutND"}
1.6 AxRxx :|-: AxRxfx
```


<br>

<br>

These are lecture notes written by Sean Walsh. They are run on [carnap.io](http://www.carnap.io).[^3]

[^3]: which is: