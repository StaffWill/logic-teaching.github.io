<style>
table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {background-color: #f2f2f2;}
</style>

<br>
<br>

# Classical predicate logic

<br>

- [Another example of combining proofs](#another-example-of-combining-proofs)
- [Double-negation and Derivation of DeMorgan](#double-negation-and-derivation-of-demorgan)
- [Frege and Aristotle on double-negation and law of excluded middle](#frege-and-aristotle-on-double-negation-and-law-of-excluded-middle)

We introduce classical predicate logic, and talk a bit about its motivation. Before we do that, we review a bit one of the ideas from last time about combining proofs.

<br>

## Another example of combining proofs

First we begin with two simple proofs:

*Example 1*

```{.ProofChecker .GamutNDPlus submission="none"}
 Fa/\Ga  :|-: Ex(Fx/\Gx)
|Fa/\Ga :assumption
|Ex(Fx/\Gx)  :IE1
```

*Example 2*

```{.ProofChecker .GamutNDPlus submission="none"}
 Ex(Fx/\Gx)  :|-: ExFx
|Ex(Fx/\Gx) :assumption
| Fb/\Gb :assumption
| Fb :E/\2
| ExFx :IE3
|(Fb/\Gb)->ExFx :I->2-4
|ExFx :EE1,5
```

*Example 3*

Then we prove this by combining the two previous proofs:

```{.ProofChecker .GamutNDPlus submission="none"}
 Fa/\Ga  :|-: ExFx
|Fa/\Ga :assumption
|Ex(Fx/\Gx)  :IE1
| Fb/\Gb :assumption
| Fb :E/\3
| ExFx :IE4
|(Fb/\Gb)->ExFx :I->3-5
|ExFx :EE2,6
```

Note that when we have finished this proof in Example 3 we have an introduction of existential followed immediately by an elimination of existential. This inevitably happens when one pastes together different proofs.

*Example 4*

Here, in this example, we give the direct proof. One can see this arising simply by following the strategy of "apply elimination rules at top, and then introduction rules at bottom." It also arises from taking our proof in Example 3 and moving what is in the brackets upwards and changing the letter `b` to `a`.

```{.ProofChecker .GamutNDPlus submission="none"}
 Fa/\Ga  :|-: ExFx
|Fa/\Ga :assumption
|Fa :E/\1
|ExFx :IE2
```

<br>

## Double-negation and Derivation of DeMorgan

The deductive system we have been working with up to this point is called intuitionistic predicate logic. Now we extend the system further with another rule called double-negation that says that $\phi$ is equivalent to $\neg \neg \phi$. We add this to our deductive system using the abbreviation `DN`. We write the rule like follows:

<video controls width="700" src="https://logic-teaching.github.io/pred/vid/DN.mp4"/> </video>

<br>

(Note that that the version on the right-hand side is in fact derivable from the other rules). The logic which results from adding double-negation to our system is called *classical predicate logic*.

The law of double-negation can help us prove the remaining DeMorgan laws for the quantifiers:

- *DeMorgan*: $\neg \forall \;x \; \phi(x)$ is equivalent to $\exists \; x \; \neg \phi(x)$.
- *DeMorgan*: $\neg \exists \; x \; \phi(x)$ is equivalent to $\forall \; x \; \neg \phi(x)$.

The second one was already covered in the Practice Problems from last week. We now handle the first one, and we split it into two parts:

*Example 5*

```{.ProofChecker .GamutNDPlus submission="none"}
 ~AxFx  :|-: Ex~Fx
|~AxFx :assumption
| ~Ex~Fx :assumption
|  ~Fc :assumption
|  Ex~Fx :IE3
|  ⊥ :E~2,4
| ~~Fc :I~3-5
| Fc :DN6
| AxFx :IA7
| ⊥ :E~1,8
|~~Ex~Fx :I~2-9
|Ex~Fx :DN10
```

Before we turn to the other half of this instance of DeMorgan, let us note that this proof illustrates that classical predicate logic does not have the subformula property. In particular `~~Ex~Fx` in the second-to-last line is not a subformula of either the premise `~AxFx` or the conclusion `Ex~Fx`.

Here is the other half of this version of DeMorgan, which does not in fact require the subformula property:

*Example 6*

```{.ProofChecker .GamutNDPlus submission="none"}
 Ex~Fx  :|-: ~AxFx
|Ex~Fx :assumption
| AxFx :assumption
|  Ex~Fx :assumption
|   ~Fc :assumption
|   Fc :EA2
|   ⊥ :E~4,5
|  ~Fc->⊥ :I->4-6
|  ⊥ :EE3,7
| ~Ex~Fx :I~3-8
| ⊥ :E~1,9
|~AxFx :I~2-10
```

<br>

## Frege and Aristotle on double-negation and law of excluded middle

Against the other rules of intuitionistic predicate logic, double-negation is equivalent to law of the excluded middle, which we designate as `LEM` in our proof system. This law says that one can write $\phi \vee \neg \phi$ on any line, and justify it merely as `LEM`. (The proof of the equivalence of double-negation and law of excluded middle is written up in the last section of the practice problems for this week).

Why believe double-negation and law of the excluded middle? These rules do not seem to be introduction rules or elimination rules for any symbol. Hence, Gentzen's specific proposal for how to think about the rules as offering definitions will not work. Maybe there is a more general sense of definition-- sometimes called "implicit definition"-- on which double-negation and law of the excluded middle are simply describing the contours of some notion we are already interested in.

But that would push the question back to why we are interested in the notion as described by double-negation and law of the excluded middle. One easy answer is simply that they follow rather trivially from the truth-tables for negation (and disjunction), or the associated clauses in Tarski's definition of truth in a model. But then it would seem that the primary or fundamental object of study would be the truth-tables or models, and it is even hard to see why one would be interested in proofs *per se*.

One answer to this kind of concern is voiced powerfully in the work of Frege, who was the first to develop first-order classical predicate logic, in his 1879 work *Begriffschrift*, whose title loosely translates as "Concept writing." Frege's idea was of the purpose of proof-system was that:[^1]

&nbsp; &nbsp; &nbsp;  <img src="https://logic-teaching.github.io/pred/texts/Frege%201967%20-%20Begriffsschrift%20-%20Preface%20quotation%20p.%206.png
" alt="Frege on proofs" width="700"/>

[^1]: p. 6 of: [Frege, Gottlob. 1967. “Begriffsschrift.” In From Frege to Gödel: A Source Book in Mathematical Logic, 1879-1931, edited by Jean Van Heijenoort, 1–83. Harvard University Press.](https://logic-teaching.github.io/pred/texts/Frege%201967%20-%20Begriffsschrift.pdf). The original is: [Frege, Gottlob. 1879. Begriffsschrift, Eine Der Arithmetischen Nachgebildete Formelsprache Des Reinen Denkens. Halle: Nebert.]()

He goes onto suggest that proof-theory is to reasoning what a microscope is to vision: it helps one zoom in and see details of the derivation which one might not have otherwise been able to see. Frege's general picture was that the proofs produced thereby probably are not evident or obvious: their value rather was that they are gapless, and one does not need to worry that other premises besides the ones cited have snuck into one's proof. As to what makes a logical law a logical law, Frege has a rather quietest attitude towards this question: while we can say things like logical laws make demands on us and have maximally wide applicability, perhaps there is nothing informative that one can ultimately say to the reason why a logical law is a logical law.[^2] His brief remarks on why double-negation is true and the other laws of predicate logic are true seem to go through proto-semantic notions like truth-tables and model-like notions, and unlike Gentzen he does not suggest laws of logic could even be thought of as definitions in any interesting sense.

[^2]:

These are lecture notes written by Sean Walsh. They are run on [carnap.io](http://www.carnap.io).[^5]

[^5]: which is:

