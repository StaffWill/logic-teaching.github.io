<br>
<br>

Logic, First Course, Winter 2020. Week 3, Lecture 1. [Back to course website](https://ccle.ucla.edu/course/view.php?id=82647&section=4)

# Validities

In this lecture, we learn about validities. We look at paradigmatic examples of, as well as ways to quickly recognize some validities. Similarly, we look at representative examples of invalidities -- these are some of the well-known fallacies.

- [Definition of validity](#definition-of-validity)
- [First paradigmatic example of modus ponens](#first-paradigmatic-example-of-modus-ponens)
- [Second paradigmatic example of modus tollens](#second-paradigmatic-example-of-modus-tollens)
- [The invalidity of affirming the consequent](#the-invalidity-of-affirming-the-consequent)
- [Being clear about what may be bad about invalidities](#being-clear-about-what-may-be-bad-about-invalidities)
- [The invalidity of denying the antecedent](#the-invalidity-of-denying-the-antecedent)
- [Deduction theorem](#deduction-theorem)
- [Question-begging arguments](#question-begging-arguments)
- [Validities and equivalences](#validities-and-equivalences)
- [Validities from substitution and distinguishing from invalidities](#Validities-from-substitution-and-distinguishing-from-invalidities)
- [Third class of paradigmatic examples of disjunctive syllogisms](#third-class-of-paradigmatic-examples-of-disjunctive-syllogisms)
- [Reasoning by cases](#reasoning-by-cases)

<br>

## Definition of validity

On a very abstract level, an argument consists of several premises and a single conclusion. This level of abstraction ignores for the moment the reasons we have for thinking that the conclusion follows from the premises. These reasons might be complex, and come from a multitude of sources of evidence: perception, past experience, testimony, or logic. We abstract in this way so that we can focus on a particular source of evidence coming from logic, namely the situation in which the truth of the premises guarantees the truth of the conclusion, by virtue of logic alone.

To formalize this notion of guarantee, we say: an argument is *valid* if for all possible distribution of truth-values of the basic propositional letters in the formulas, if all the premises are true, then the conclusion is true. For short we say:  an argument is *valid* if whenever all the premises are true, the conclusion is true. The sense of "whenever" is then "whenever you look at a row of the truth-table." As such, validity is clearly a very useful property to be able to identify: if an argument is valid, then all we need to do in order to obtain the truth of its conclusion is to certify that the premises are all true, and logic does the rest.

We write $\phi_1, \ldots, \phi_n \vdash \psi$ to indicate that the argument with premises $\phi_1, \ldots, \phi_n$ and conclusion $\psi$ is valid. The symbol $\vdash$ is sometimes pronouced the *consequence symbol*. It is written on paper by just a vertical line drawn downwards and then a horizontal line attached to it. INSERT VIDEO. There are various alternative ways of pronouncing the expression $\phi_1, \ldots, \phi_n \vdash \psi$ out loud:

1. $\phi_1, \ldots, \phi_n \vdash \psi$
2. $\phi_1, \ldots, \phi_n$ have $\psi$ as a consequence.
3. From premises $\phi_1, \ldots, \phi_n$ the conclusion $\psi$ follows.
4. The conclusion $\psi$ follows from premises $\phi_1, \ldots, \phi_n$.
5. The argument with premises $\phi_1, \ldots, \phi_n$ and conclusion $\psi$ is valid.

Note that we are using commas to separate premises. In this context, the commas function like conjunctions, since someone who believes e.g. the two premises of the argument from $\phi_1, \phi_2$ to $\psi$ in fact believes both premises. And if the argument is valid, then of course they have a good reason to believe the conclusion $\psi$.

<br>

## First paradigmatic example of modus ponens

Here is our first paradigmatic example of a valid argument, which bears the traditional name of *modus ponens*:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p->q, p :|-: q
~~~

The columns of this truth-table outside of the consequence relation $\vdash$ should be familiar to you. As with the other connectives, with $\vdash$ we work row by row. In a given row, the rule for $\vdash$ is as follows. Put true under the $\vdash$ if and only if the following happens: if the premises are all true, then the conclusion is true. Hence, the only circumstance when we put a false under the $\vdash$ is in a row where there the premises are all true and the conclusion is false. Expressed in these terms, an argument is valid precisel when there are all true's under the $\vdash$ column.

With this rule in place, you should be able to fill out the above truth-table for modus ponens. Here is a video of the truth-table being filled out with some color highlighting to emphasize the application of the rule. As one sees, all the entries under the $\vdash$ column are true, indicating that it is a valid argument.

INSERT video

How should one memorize modus ponens? Well, the idea is just that: if you know an arrow statement is true, and you know the antecedent is true, then you know the consequent is true. Put this way, it is just a different expression of part of what one knows about the truth-table for arrow statements. We will explore this parallel in a moment in the section [Deduction theorem and tautologies and validities](#deduction-theorem-and-tautologies-and-validities).

<br>

## Second paradigmatic example of modus tollens

The second paradigmatic example of a valid argument is called *modus tollens*:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p->q, ~q :|-: ~p
~~~

It is a valid argument because if one fills out the table, then there are all trues under the $\vash$ column, as one can see in the following video:

INSERT VIDEO

<br>

## The invalidity of affirming the consequent

A "fallacy" is just an error in argumentation. Some errors relate to invalitity. The word "invalid" is just a way of saying "not valid." By definition then, invalid arguments are just arguments such that there is some row of the truth-table where the premises are all true and yet the conclusion is false. In that row, we will put false under the $\vdash$ column. Here is a famous invalidity, which is sometimes called *affirming the consequent*:

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms" submission="none"}
 p->q, q :|-: p
~~~

One can check it is an invalidity in two ways. First, one can complete the entire table correctly and just see that there is some row where there is a false under the $\vdash$ column. This is what we do in the following video:

INSERT VIDEO

Second, one can use one's knowledge of the propositional connectives to just guess a row which shows it is invalid and then just press the "Non-Tautology" button and enter that row. In this case, we know that if $p$ is false and $q$ is true, then $p\rightarrow q$ is true. This means that if the premise $p\rightarrow q$ is true and the premise $q$ is true, then the conclusion $p$ will be false, indicating that the argument is invalid. Hence, we would just press the "Non-Tautology" button and enter in FT. This is what we do in the following video:

INSERT VIDEO

Hence, what we have learned is that the argument with premises $p\righarrow q$ and $q$ and conclusion $p$ is not valid. We sometimes write this like $p\rightarrow q,q\nvdash p$, where the symbol $\nvdash$ is formed from $\vdash$ by putting a vertical line through it which is twisted just a little bit clockwise. The following short video shows you how to write it:

INSERT VIDEO

Hence, think of the truth-tables which follow and which are in the problem-sets as asking you to figure out whether the argument in question is a validity  or not. In the case that they  are, we in later contexts will write the $\vdash$ to indicate that they are. In case that they are not, we will write $\nvdash$ to indicate that they are not. For instance, modus ponens was a validity, so we write $p\rightarow q,p\vdash q$ to record that. But affirming the consequent was not a validity, and so we write $p\rightarrow q, q\nvdash p$ to record that.

<br>

## Being clear about what may be bad about invalidities

It should be emphasized that invalid arguments are not necessarily bad in all ways. In saying that an argument is invalid, we are just saying that the truth of the premises does not guarantee the truth of the conclusion. But arguments can be invalid and yet be good. Take "if it is raining then the sidewalks are wet; the sidewalks are wet, therefore it is raining." This argument has the exact same form as affirming the consequent. And yet it is  an argument that we would all think is rather reasonable. To be sure, the truth of the premises merely makes it more likely that the conclusion is true. In marking the argument as invalid, we are merely pointing out that the truth of the premises does not guarantee  the truth of the conclusion. This is another way of saying that validity merely tells us what makes a good deductive argument, rather than a good inductive argument.

<br>

## The invalidity of denying the antecedent

There is another invalidity which bears a passing similarity to the valid modus tollens argument. It is called *denying the antecedent*

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms" submission="none"}
 p->q, ~p :|-: ~q
~~~

Again, when posed like this, the computer system is giving you the problem: figure out whether it is a validity. In this case, it is an invalidity. We can  brute force it and fill it all out, and eventually uncover a row where all the premises are true and the conclusion is false. This is what we do in the below video:

INSERT VIDEO

Alternatively, we can try to think through it and figure out, based on our knowledge of the propositional connectives, what row will be such that all the premises are true and the conclusion is false. Consider again the row FT. In this row $p$ is false so $\neg p$ is true; and likewise in this row $q$ is true so $\neg q$ is false. Further in this row the premise $p\rightarrow q$ is true. Hence the two premises $p\rightarrow q$ and $\neg  p$ are true in this row but the conclusion $\neg q$ is false. Hence the argument is invalid. To solve the problem this way, we click the "Non-Tautology" button and we enter in FT again. Here is a video of that:

Hence, since the argument is invalid, if we want to later recall this without having to write out the truth-table again, we would just write $p\rightarrow q, \neg p\nvdash \neg q$. Likewise, if you read  $p\rightarrow q, \neg p\nvdash \neg q$ that is just a short way of communicating that the argument with premises $p\rightarrow q$ and $\neg p$ and conclusion $\neg q$ is invalid.

<br>


## Deduction theorem

One might have gotten the feeling already that $\vdash$ is pretty closely  related to the truth-table for arrow. The formal statement of this result is sometimes called *The Deduction Theorem*. It says that the argument with two premises $\phi_1, \phi_2$ and conclusion $\psi$ is valid if and only if $(\phi_1 \wedge \phi_2)\rightarrow \psi$ is a tautology. And similarly the argument with three premises $\phi_1, \phi_2, \phi_3$ and conclusion $\psi$ is valid if and only if $((\phi_1 \wedge \phi_2)\wedge \phi_3)\rightarrow \psi$ is a tautology. In general, whenever you have a valid argument, you can obtain a tautology from it by conjoining the premises and forming an arrow statement with this conjunction as the antecedent and the conclusion as the consequent. For instance, one can quickly visually check that the following is a tautology obtained in this way from modus ponens:

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 ((p->q)/\p)->q
~~~

And similarly this is a tautology formed from modus tollens:

Example via modus tollens

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 ((p->q)/\~q)->~p
~~~

It is a tautology simply because it has all trues under its main connective, the arrow symbol.

<br>

## Question-begging arguments

There are some errors in reasoning which are actually valid arguments and hence which are not bad by virtue of being invalid. Hence, validity is not all there is to say about what makes reasoning good. One well-known fallacy which actually ends up invovling valid arguments is called "begging the question" or "viciously arguing in a circle". An  argument is *question-begging* or *viciously circular* when its conclusion is listed among its premises, or somehow tacit in your premises. For instance, the following valid argument might be thought to be question-begging because the conclusion $q$ is just sitting in the premise $q\wedge r$, albeit implicitly:

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms nocounterexample" submission="none"}
 p->q, p, (q/\r) :|-: q
~~~

It is challenging to say more about what the notion of "tacit" or "implicit" amounts to in this context. If one meant "literally the conclusion is among the premises" then even the above argument would count as non-question-begging. But if one meant "the conclusion is somehow already to be found in the premises" then there is a sense in which all arguments are question-begging. Even though the notion of "question-begging" is hard to define, often there are clear cut cases. This can happen when one is trying to find deductive arguments for things which one already believes. For instance, suppose that you already believe $q$, and you are trying to justify your belief to a friend. You might try to argue from $p$ and $p\rightarrow q$ to $q$ using modus ponens. But when doing this, you have to be careful that your reason to belive $p\rightarrow q$ is more than just your prior belief in $q$. If your justification for believing $p\rightarrow q$ is just $q$, then your modus ponens argument to $q$ via $p\rihtarrow q$ and $p$ would be question-begging.

<br>

## Validities and equivalences

An equivalence recall is just a pair $\phi, \psi$ of formulas such that $\phi\leftrightarrow \psi$ is a tautology. But then both $\phi\rightarrow \psi$ and $\psi\rightarrow \phi$ is a tautology. And then by the [Deduction theorem](#deduction-theorem) one has that the two arguments $\phi\vdash \psi$ and $\psi\vdash \phi$ are validities. Hence, if one knows some equivalences, one already knows a lot of valid arguments. For instance, take the law of double-negation, which says that $p$ is equivalent to $\neg \neg p$. One can check that $p\vdash \neg \neg p$ and $\neg \neg p \vdash p$, as the following two tables show:

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms nocounterexample" submission="none"}
 p :|-: ~~p
~~~

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms nocounterexample" submission="none"}
 ~~p :|-: p
~~~

Likewise, recall the more complicated DeMorgan Law (part 1),  which says that $\neg (p\wedge q)$ is equivalent to $\neg p \vee \neg q$. Then $\neg (p\wedge q)\vdash \neg p \vee \neg q$ and  $\neg p \vee \neg q \vdash \neg (p\wedge q)$, as the following two tables show:

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms nocounterexample" submission="none"}
 ~(p/\q) :|-: ~p\/~q
~~~

~~~{.TruthTable .Validity system="gamutPND" options="nodash autoAtoms nocounterexample" submission="none"}
 ~p\/~q :|-: ~(p/\q)
~~~

Hence, any equivalence automatically yields two valid arguments.

<br>

## Validities from substitution and distinguishing from invalidities

Just as substitution-instances of tautologies are tautologies, so substitution-instances of valid arguments are valid arguments. Hence, one can automatically know ahead of time that the following is a valid argument simply by realizing that it is an instance of modus ponens:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 (p/\q)->r, p/\q :|-: r
~~~

If you don't recognize it as an instance of modus ponens, the following video should help you do so.

INSERT VIDEO

Likewise, another way to generate new valid arguments from old valid arguments is to replace formulas by one of their equivalents. For instance, the following is obtained from modus ponens simply by replacing $p$ by its equivalent $\neg \neg p$:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p->q, ~~p :|-: q
~~~

## Third class of paradigmatic examples of disjunctive syllogisms

Another source of paradigmatic valid arguments are disjunctive syllogisms. These are arguments who first premise is that a disjunction obtains, whose second premise is that one disjunct does not obtain, and whose conclusion is that the second disjunct obtains:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p\/q, ~p :|-: q
~~~

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p\/q, ~q :|-: p
~~~

One can check that the following are also valid arguments:

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 ~(p/\q), p :|-: ~q
~~~

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 ~(p/\q), q :|-: ~p
~~~

Another way to see that these are valid arguments is to use substitution and the DeMorgan laws and double-negation, as illustrated in the below video:

If one remembers that the commas which separate out the premises of a valid argument behave like conjunction, one can also see quickly that $p\vee (q\vee r), \neg q, \neg r \vdash p$ is a validity, without having to do its complicated table. In the short movie below we illustrate the quick argument-- contrast this to the complicated truth-table filled out below.

INSERT MOVIE

~~~{.TruthTable .Validity system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 p\/(q\/r), ~q, ~r :|-: p
~~~

<br>

<br>

These are lecture notes written for [this course](https://ccle.ucla.edu/course/view.php?id=82647&section=4).[^2]


[^2]:It is run on the Carnap software, which is
